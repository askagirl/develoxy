import React, { Component, PropTypes } from 'react';
import brace from 'brace';
import AceEditor from 'react-ace';

import 'brace/mode/markdown';
import 'brace/theme/monokai';


import debounce from 'lodash/debounce';

class Editor extends Component {

    static propTypes = {
        onChange: PropTypes.func,
        value: PropTypes.string
    }
    state = { 
        width: '300px',
        height: '300px'
    }

    editor = null


    constructor(props) {
        super(props);
        this.handleChange = debounce(this.handleChange, 300);
        this.handleResize = debounce(this.handleResize, 300);
    }

    componentDidMount() {
        window.addEventListener('resize', this.handleResize);
        this.handleResize();
    }

    componentWillUnmount() {
        window.removeEventListener('resize', this.handleResize);
    }
    
    
    
    handleChange = (value) => {
        const { onChange } = this.props;        
        onChange(value);
    }
    
    handleResize = () => {
        const { editor } = this;
        
        const width = editor.offsetWidth;
        const height = editor.offsetHeight;

        this.setState({
            width: `${width}px`,
            height: `${height}px`
        });
    }

    handleClick() {
        console.log(this);
    }


    render() {
        const { handleChange } = this;
        const { value } = this.props;
        const { width, height } = this.state;


        return (
            <div className="editor-wrapper">
                <div className="editor" ref={(ref)=>{this.editor=ref}}>
                    <AceEditor
                        className="ace"
                        mode="markdown"
                        theme="monokai"
                        onChange={handleChange}
                        name="ACE_EDITOR"
                        editorProps={{$blockScrolling: "Infinity"}}
                        fontSize="16px"
                        value={value}
                        width={width}
                        height={height}
                    />
                </div>
            </div>
        );
    }
}

export default Editor;